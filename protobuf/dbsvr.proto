syntax = "proto3";

package g1.protocol;

import "common.proto";

message DBType {
    enum EDBType {
        _DB_ZERO = 0;
        DB_TYPE_ROLE        = 1; // 玩家角色的详细数据
        DB_TYPE_ACCOUNT     = 2; // 每个区当前账号数量，用于生成账号
        DB_TYPE_BRIEF_INFO  = 3; // 角色是摘要信息
        DB_TYPE_RANK        = 4; // 各种排行榜
        DB_TYPE_GUILD           = 5;    // 公会
        DB_TYPE_MAIL            = 6;   // 邮件
        DB_TYPE_CHAT            = 7;   // 离线聊天数据
        DB_TYPE_FRIEND          = 8;   // 好友数据
        DB_TYPE_MISC            = 99;   // 一些单独的key
    }
}

// DB_UID_GET_REQ
message DBUidGetReq {
    uint32 db_type = 1;
    uint64 uid = 2;
}

message DBUidGetRsp {
    Ret ret = 1;
    bytes data = 2;
}

// DB_UID_MGET_REQ
message DBUidMGetReq {
    uint32 db_type = 1;
    repeated uint64 uid_list = 2;
}

message DBUidMGetRsp {
    Ret ret = 1;
    repeated bytes data_list = 2;
}

// DB_UID_SET_REQ
message DBUidSetReq {
    uint32 db_type = 1;
    uint64 uid = 2;
    bytes data = 3;
    bool  ignore_rsp = 4;
}

message DBUidSetRsp {
    Ret ret = 1;
    uint32 db_type = 2;
}

// DB_COMM_GET_REQ
message DBCommGetReq {
    uint32 db_type = 1;
    string key = 2;
}

message DBCommGetRsp {
    Ret ret = 1;
    bytes data = 2;
}

// DB_COMM_MGET_REQ
message DBCommMGetReq {
    uint32 db_type = 1;
    repeated string key_list = 2;
}

message DBCommMGetRsp {
    Ret ret = 1;
    repeated bytes data_list = 2;
}

// DB_COMM_SET_REQ
message DBCommSetReq {
    uint32 db_type = 1;
    string key = 2;
    bytes data = 3;
    bool  ignore_rsp = 4;
    int32 expire_seconds = 5;
}

message DBCommSetRsp {
    Ret ret = 1;
    uint32 db_type = 2;
}

// DB_COMM_DEL_REQ
message DBCommDelReq {
    uint32 db_type = 1;
    string key = 2;
}

message DBCommDelRsp {
    Ret ret = 1;
}

//// DB_COMM_SETNX_REQ
//message DBCommSetnxReq {
//    uint32 db_type = 1;
//    string key = 2;
//    bytes data = 3;
//    bool  ignore_rsp = 4;
//}
//
//message DBCommSetnxRsp {
//    Ret ret = 1;
//}
//


// DB_COMM_INCR_REQ
message DBCommIncrReq {
    uint32 db_type = 1;
    string key = 2;
}

message DBCommIncrRsp {
    Ret ret = 1;
    int64 value = 2;
}


//message DBRedisHashItem {
//    string field = 1;
//    string value = 2;
//}
//
//// DB_COMM_HASH_SET_REQ
//message DBCommHashSetReq {
//    uint32 db_type = 1;
//    string key = 2;
//    repeated DBRedisHashItem item_list = 3;
//    bool   ignore_rsp = 4;
//}
//
//message DBCommHashSetRsp {
//    Ret ret = 1;
//    uint32 db_type = 2;
//}
//
//
//// DB_COMM_HASH_GET_REQ
//message DBCommHashGetReq {
//    uint32 db_type = 1;
//    string key = 2;
//}
//
//message DBCommHashGetRsp {
//    Ret ret = 1;
//
//    uint32 db_type = 2;
//    string key = 3;
//    repeated DBRedisHashItem item_list = 4;
//}


// DB_COMM_ZSET_SET_REQ
message DBCommZsetSetReq {
    uint32 db_type = 1;
    string set_name = 2;
    int32 max_key_cnt = 3;
    string key = 4;
    int32 score = 5;
}

message DBCommZsetSetRsp {
    Ret ret = 1;
}

// DB_COMM_ZSET_GET_REQ
message DBCommZsetGetReq {
    uint32 db_type = 1;
    string set_name = 2;
    int32 begin_rank = 3;
    int32 end_rank = 4;
}

message DBCommZsetGetRsp {
    Ret ret = 1;
    uint32 begin_rank = 2;
    uint32 end_rank = 3;
    repeated string rank_list = 4;
}

// DB_COMM_ZSET_FIND_RANK_REQ
message DBCommZsetFindRankReq {
    uint32 db_type = 1;
    string set_name = 2;
    string key = 3;
}

message DBCommZsetFindRankRsp {
    Ret ret = 1;
    int32 rank = 2;
}

// DB_COMM_ZSET_INCR_REQ
message DBCommZsetIncrReq {
    uint32 db_type = 1;
    string set_name = 2;
    string member = 3;
    double added_score = 4;
}

message DBCommZsetIncrRsp {
    Ret ret = 1;
    double score_after = 2;
}

// DB_COMM_ZSCORE_REQ
message DBCommZScoreReq {
    uint32 db_type = 1;
    string set_name = 2;
    string member = 3;
}

message DBCommZScoreRsp {
    Ret ret = 1;
    double score = 2;
}

// DB_COMM_ZREVRANGE_REQ
message DBCommZRevRangeReq {
    uint32 db_type = 1;
    string key = 2;
    int32 start = 3;
    int32 stop = 4;
    bool with_scores = 5;
}

message DBRedisZItem {
    string member = 1;
    int32 score = 2;
    int32 rank = 3;
}

message DBCommZRevRangeRsp {
    Ret ret = 1;
    repeated DBRedisZItem items = 2;
}

// DB_COMM_EXPIRE_REQ
message DBCommExpireReq {
    uint32 db_type = 1;
    string key = 2;
    int32 seconds = 3;
}

message DBCommExpireRsp {
    Ret ret = 1;
}

// DB_COMM_SETEXNX_REQ
message DBCommSetExNxReq {
    uint32 db_type = 1;
    string key = 2;
    string value = 3;
    int32 seconds = 4;
}

message DBCommSetExNxRsp {
    Ret ret = 1;
}

